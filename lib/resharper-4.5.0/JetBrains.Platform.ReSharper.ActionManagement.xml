<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.Platform.ReSharper.ActionManagement</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ActionManagement.ShellComponentsEx">
            <summary>
            <see cref="T:JetBrains.Application.ShellComponents"/> in this assembly.
            </summary>
        </member>
        <member name="M:JetBrains.ActionManagement.ActionManager.ExecuteActionUnsafe(System.String)">
            <summary>
            Call the method if and only if you're absolutely sure the action is available. Better call <see cref="M:JetBrains.ActionManagement.ActionManager.ExecuteActionIfAvailable(System.String)"/> instead.
            </summary>
        </member>
        <member name="M:JetBrains.ActionManagement.ActionManager.ExecuteActionUnsafe(JetBrains.ActionManagement.IExecutableAction)">
            <summary>
            Call the method if and only if you're absolutely sure the action is available. Better call <see cref="M:JetBrains.ActionManagement.ActionManager.ExecuteActionIfAvailable(JetBrains.ActionManagement.IExecutableAction)"/> instead.
            </summary>
        </member>
        <member name="M:JetBrains.ActionManagement.ActionManager.ExecuteShortcut(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Attempts to execute the keyboard shortcut.
            Composite keyboard shortcuts, eg “Ctrl+K,F”, should be executed twice, once for each of the components.
            </summary>
            <param name="shortcut">The keyboard shortcut to execute. May be a part of a composite shortcut.</param>
            <param name="bIncludeHostActions">In a standalone configuration, has no meaning. In an embedded configurations, includes the host actions in the search list together with own actions managed by the action-manager.</param>
            <returns>Whether the action has been executed.</returns>
        </member>
        <member name="M:JetBrains.ActionManagement.ActionManager.GetActionShortcutText(System.String)">
            <summary>
            Retrieves a shortcut for the given action, returns either the shortcut text or the action name, if no shortcut is currently set.
            </summary>
        </member>
        <member name="T:JetBrains.ActionManagement.ActionPresentation">
            <summary>
            Visual presentation of an Action
            </summary>
        </member>
        <member name="T:JetBrains.ActionManagement.IDataConstant">
            <summary>
            Type of data, returned by IDataContextProvider
            </summary>
        </member>
        <member name="P:JetBrains.ActionManagement.IDataConstant.Id">
            <summary>
            Gets the unique ID of this data constant instance.
            </summary>
        </member>
        <member name="M:JetBrains.ActionManagement.DataConstant`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:JetBrains.ActionManagement.DataRule">
            <summary>
            Rule for data contstant generation. 
            </summary>
        </member>
        <member name="T:JetBrains.ActionManagement.IDataContext">
            <summary>
            The context, passed to Action.
            </summary>
        </member>
        <member name="T:JetBrains.ActionManagement.IDataProvider">
            <summary>
            The control, that implements this interface returns typed data used by Action.
            </summary>
        </member>
        <member name="T:JetBrains.ActionManagement.IActionBase">
            <summary>
            Base for all actions. Has no implementation.
            </summary>
        </member>
        <member name="T:JetBrains.ActionManagement.ISeparator">
            <summary>
            Separator. The Action manager handles its appearance according to the 
            presentation of surrounding actions.
            </summary>
        </member>
        <member name="T:JetBrains.ActionManagement.IUpdatableAction">
            <summary>
            Action which presentation can be updated.
            </summary>    
        </member>
        <member name="T:JetBrains.ActionManagement.IActionGroup">
            <summary>
            Group of actions.
            </summary>
        </member>
        <member name="T:JetBrains.ActionManagement.IExecutableAction">
            <summary>
            Action that can be executed.
            </summary>
        </member>
        <member name="P:JetBrains.ActionManagement.IExecutableAction.ShowConflict">
            <summary>
            Option whether to show shortcut conflict dialog or not.
            Default value is true
            </summary>
        </member>
        <member name="T:JetBrains.ActionManagement.IActionWithGroup">
            <summary>
            Action with group (i.e. 'NavigateBackwards' or 'Undo' in visual studio).
            In menu represented as simple menu item, in toolbar - as toolbar button with drop-down menu.
            </summary>
        </member>
        <member name="M:JetBrains.ActionManagement.IActionHandler.Update(JetBrains.ActionManagement.IDataContext,JetBrains.ActionManagement.ActionPresentation,JetBrains.ActionManagement.DelegateUpdate)">
            <summary>
            Updates action visual presentation. If presentation.Enabled is set to false, Execute
            will not be called.
            </summary>
            <param name="context">DataContext</param>
            <param name="presentation">presentation to update</param>
            <param name="nextUpdate">delegate to call</param>
        </member>
        <member name="M:JetBrains.ActionManagement.IActionHandler.Execute(JetBrains.ActionManagement.IDataContext,JetBrains.ActionManagement.DelegateExecute)">
            <summary>
            Executes action. Called after Update, that set ActionPresentation.Enabled to true.
            </summary>
            <param name="context">DataContext</param>
            <param name="nextExecute">delegate to call</param>
        </member>
    </members>
</doc>
