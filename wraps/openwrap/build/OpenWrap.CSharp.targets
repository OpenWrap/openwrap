<?xml version="1.0" encoding="utf-8"?>
<!-- Defines targets for projects that consume wraps -->
<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="OpenWrap-Initialize">

  <!-- Default folder locations -->
  <PropertyGroup>
    <OpenWrap-EnableVisualStudioIntegration Condition="'$(OpenWrap-EnableVisualStudioIntegration)' == '' and '$(BuildingInsideVisualStudio)' == 'true'">true</OpenWrap-EnableVisualStudioIntegration>

    <!-- Emit output information post-build for OpenWrap to create packages -->
    <OpenWrap-EmitOutputInstructions Condition="'$(OpenWrap-EmitOutputInstructions)' == ''">false</OpenWrap-EmitOutputInstructions>

    <OpenWrap-EnableVisualStudioIntegration Condition="'$(OpenWrap-EnableVisualStudioIntegration)' == ''">false</OpenWrap-EnableVisualStudioIntegration>
    <!-- We detect the root path based on the existence of a /wraps folder -->
    <OpenWrap-ProjectRepositoryPath Condition="'$(OpenWrap-ProjectRepositoryPath)' == ''">$(MSBuildProjectDirectory)\..\wraps</OpenWrap-ProjectRepositoryPath>
    <OpenWrap-ProjectRepositoryPath Condition="!Exists('$(OpenWrap-ProjectRepositoryPath)')">$(MSBuildProjectDirectory)\..\..\wraps</OpenWrap-ProjectRepositoryPath>
    <OpenWrap-ProjectRepositoryPath Condition="!Exists('$(OpenWrap-ProjectRepositoryPath)')">$(MSBuildProjectDirectory)\..\..\..\wraps</OpenWrap-ProjectRepositoryPath>

    <OpenWrap-BuildTasksDirectory Condition="'$(OpenWrap-BuildTasksDirectory)' == ''">$(OpenWrap-ProjectRepositoryPath)\openwrap\build</OpenWrap-BuildTasksDirectory>

    <RootSolutionDirectory>$(OpenWrap-ProjectRepositoryPath)\..</RootSolutionDirectory>

    <!-- These properties are defined so we can default the build when ran outside of the msbuild runner (ie within VS). -->
    <OpenWrap-TargetProfile Condition="'$(OpenWrap-TargetProfile)' == '' and '$(TargetFrameworkVersion)' == 'v2.0'">net20</OpenWrap-TargetProfile>
    <OpenWrap-TargetProfile Condition="'$(OpenWrap-TargetProfile)' == '' and '$(TargetFrameworkVersion)' == 'v3.0'">net30</OpenWrap-TargetProfile>
    <OpenWrap-TargetProfile Condition="'$(OpenWrap-TargetProfile)' == '' and '$(TargetFrameworkVersion)' == 'v3.5'">net35</OpenWrap-TargetProfile>
    <OpenWrap-TargetProfile Condition="'$(OpenWrap-TargetProfile)' == '' and '$(TargetFrameworkVersion)' == 'v4.0'">net40</OpenWrap-TargetProfile>

    <OpenWrap-TargetPlatform Condition="'$(OpenWrap-TargetPlatform)' == ''">$(Platform)</OpenWrap-TargetPlatform>
    <OpenWrap-TargetPlatform Condition="'$(OpenWrap-TargetPlatform)' == ''">AnyCPU</OpenWrap-TargetPlatform>
    <OpenWrap-ExportName Condition="'$(OpenWrap-ExportName)' == ''">bin-$(OpenWrap-TargetProfile)</OpenWrap-ExportName>
    <DefineConstants>$(DefineConstants);__OW_PLATFORM_$(OpenWrap-TargetPlatform)__;__OW_PROFILE_$(OpenWrap-TargetProfile)__;</DefineConstants>
    <OpenWrap-AllowBinDuplicates Condition="'$(OpenWrap-AllowBinDuplicates)' == ''">false</OpenWrap-AllowBinDuplicates>
    <OpenWrap-CopyLocal Condition="'$(OpenWrap-CopyLocal)' == ''">true</OpenWrap-CopyLocal>

    <OpenWrap-IncludePdbFiles Condition="'$(OpenWrap-IncludePdbFiles)' == ''">true</OpenWrap-IncludePdbFiles>
    <OpenWrap-IncludeCodeDocFiles Condition="'$(OpenWrap-IncludeCodeDocFiles)' == ''">true</OpenWrap-IncludeCodeDocFiles>
    <OpenWrap-IncludeBinFiles Condition="'$(OpenWrap-IncludeBinFiles)' == ''">true</OpenWrap-IncludeBinFiles>
    <OpenWrap-IncludeSourceFiles Condition="'$(OpenWrap-IncludeSourceFiles)' == ''">false</OpenWrap-IncludeSourceFiles>
    <OpenWrap-IncludeContentFiles Condition="'$(OpenWrap-IncludeContentFiles)' == ''">false</OpenWrap-IncludeContentFiles>
    
    <_OpenWrap-GenerateSharedAssemblyInfo>False</_OpenWrap-GenerateSharedAssemblyInfo>
    <_OpenWrap-GenerateSharedAssemblyInfo Condition="Exists('$(OpenWrap-SharedAssemblyInfoFile)')">False</_OpenWrap-GenerateSharedAssemblyInfo>
  </PropertyGroup>

  <Target Name="OpenWrap-Initialize">
    <InitializeOpenWrap StartDebug="$(OpenWrap-StartDebug)" CurrentProjectFile="$(MSBuildProjectFullPath)"  >
      <Output TaskParameter="Name" PropertyName="OpenWrap-PackageName" />
      <Output TaskParameter="Scope" PropertyName="_OpenWrap-Scope" Condition="'$(OpenWrap-Scope)' == ''" />
      <Output TaskParameter="DescriptorPath" PropertyName="_OpenWrap-DescriptorPath" Condition="'$(OpenWrap-DescriptorPath)' == ''" />
    </InitializeOpenWrap>
    <PropertyGroup>
      <_OpenWrap-DescriptorPath Condition="'$(OpenWrap-DescriptorPath)' != ''">$(OpenWrap-DescriptorPath)</_OpenWrap-DescriptorPath>
    </PropertyGroup>
    <InitializeVisualStudioIntegration
      EnableVisualStudioIntegration="$(OpenWrap-EnableVisualStudioIntegration)"
      />
    <!-- Sanity checks -->

    <Error Condition="'$(OutputType)' != 'winexe' and '$(OutputType)' != 'exe' and '$(OutputType)' != 'library'" Text="The project type '$(OutputType)' is not supported." />

  </Target>





  <PropertyGroup>

  </PropertyGroup>

  <Target Name="OpenWrap-ResolveReferences" DependsOnTargets="OpenWrap-Initialize">

    <ItemGroup Condition="Exists('$(OpenWrap-SharedAssemblyInfoFile)')">
      <Compile Include="$(OpenWrap-SharedAssemblyInfoFile)" />
    </ItemGroup>
    <ResolveWrapReferences
      WrapDescriptor="$(_OpenWrap-DescriptorPath)"
      WrapsDirectory="$(OpenWrap-ProjectRepositoryPath)"
      Platform="$(OpenWrap-TargetPlatform)"
      Profile="$(OpenWrap-TargetProfile)"
      ExcludeAssemblies="$(AssemblyName);$(OpenWrap-ExcludeAssemblies)"
      InputReferences="@(Reference)"
      CopyLocal="$(OpenWrap-CopyLocal)"
      GenerateSharedAssemblyInfo="$(_OpenWrap-GenerateSharedAssemblyInfo)"
      >
      <Output TaskParameter="GeneratedSharedAssemblyInfo" ItemName="_OpenWrap-GeneratedSharedAssemblyInfo" Condition="!Exists('$(OpenWrap-SharedAssemblyInfoFile)')"  />
      <Output TaskParameter="OutputReferences" ItemName="Reference" />

    </ResolveWrapReferences>
    <ItemGroup>
      <Compile Include="@(_OpenWrap-GeneratedSharedAssemblyInfo)" />
    </ItemGroup>
  </Target>

  <Target Name="OpenWrap-BeforeBuild" DependsOnTargets="OpenWrap-Initialize">

  </Target>


    <ItemDefinitionGroup>
      <_OpenWrap-CurrentBuildOutput>
        <TargetPath>.</TargetPath>
      </_OpenWrap-CurrentBuildOutput>
    </ItemDefinitionGroup>

    <Target Name="OpenWrap-AfterBuild"
            Condition="'$(OpenWrap-EmitOutputInstructions)' != 'false'">

      <!-- Build results for the current project and associated project references-->
      <ItemGroup>
        <!-- Binary result (.exe or .dll) -->
        <_OpenWrap-CurrentBuildOutput Include="@(IntermediateAssembly)" />

        <!-- Additional .netmodule files (?) -->
        <_OpenWrap-CurrentBuildOutput Include="@(AddModule)" />

        <!-- Serialization assemblies -->
        <_OpenWrap-CurrentBuildOutput Include="$(IntermediateOutputPath)$(_SGenDllName)" Condition="'$(_SGenDllCreated)' == 'true'" />

        <!-- PDB files-->
        <_OpenWrap-CurrentBuildOutput Include="@(_DebugSymbolsIntermediatePath)" />

        <!-- XML doc file -->
        <_OpenWrap-CurrentBuildOutput Include="@(FinalDocFile)" />

        <!-- Satellite assemblies  -->
        <_OpenWrap-CurrentBuildOutput Include="@(IntermediateSatelliteAssembliesWithTargetPath)">
          <TargetPath>%(IntermediateSatelliteAssembliesWithTargetPath.TargetPath)</TargetPath>
        </_OpenWrap-CurrentBuildOutput>

        <!-- COM References -->
        <_OpenWrap-CurrentBuildOutput Include="@(ReferenceComWrappersToCopyLocal); @(ResolvedIsolatedComModules); @(_DeploymentLooseManifestFile); @(NativeReferenceFile)" />

        <!-- All project references and associated files (contracts, symbols, xml, etc) -->
        <_OpenWrap-CurrentBuildOutput Include="@(ReferenceCopyLocalPaths)">
          <TargetPath>%(ReferenceCopyLocalPaths.DestinationSubDirectory)</TargetPath>
        </_OpenWrap-CurrentBuildOutput>

        <!-- All things with CopyToOutputDirectory in project -->
        <_OpenWrap-CurrentBuildOutput Include="@(AllItemsFullPathWithTargetPath)">
          <TargetPath>%(AllItemsFullPathWithTargetPath.TargetPath)</TargetPath>
        </_OpenWrap-CurrentBuildOutput>

        <!-- Application config files -->
        <_OpenWrap-CurrentBuildOutput Include="@(AppConfigWithTargetPath)">
          <TargetPath>%(AppConfigWithTargetPath.TargetPath)</TargetPath>
        </_OpenWrap-CurrentBuildOutput>

        <!-- All of those files that were not included by OpenWrap itself -->
        <_OpenWrap-FilteredBuildOutput Include="@(_OpenWrap-CurrentBuildOutput)" Condition="'%(_OpenWrap-CurrentBuildOutput.FromOpenWrap)' != 'True'" />

        
        <_OpenWrap-SourceOutput Include="@(Compile)" />

        <_OpenWrap-FilteredContent Include="@(Content)" Condition="'%(Content.FromOpenWrap)' != 'True'">
          <TargetPath>%(Content.Link)</TargetPath>
        </_OpenWrap-FilteredContent>
      </ItemGroup>
      
      
      
      
      <!--<Message Text="Build result: @(_OpenWrap-CurrentBuildOutput->'%(FullPath) in %(TargetPath)') " Importance="high" Condition="'%(_OpenWrap-CurrentBuildOutput.FromOpenWrap)' != 'True'"/>-->
      <Message Text="@(Content->'%(Link) -> %(FullPath)')" Importance="high" />
      <PropertyGroup>
        <_OpenWrap-IsEntryPointProject Condition="'$(OpenWrap-CurrentProjectFile)' == '' or '$(OpenWrap-CurrentProjectFile)' == '$(MSBuildProjectDirectory)\$(MSBuildProjectFile)'">true</_OpenWrap-IsEntryPointProject>
      </PropertyGroup>
      <Message Text="%(_OpenWrap-AllAssemblyReferenceFiles.RelativeDir)" Importance="high" />
      <PublishPackageContent
        Condition="'$(_OpenWrap-IsEntryPointProject)' == 'true'"
      
        IncludeBinFiles="$(OpenWrap-IncludeBinFiles)"
        IncludePdbFiles="$(OpenWrap-IncludePdbFiles)"
        IncludeCodeDocFiles="$(OpenWrap-IncludeCodeDocFiles)"
        IncludeSourceFiles="$(OpenWRap-IncludeSourceFiles)"
        IncludeContentFiles="$(OpenWrap-IncludeContentFiles)"
      
        RootPath="$(RootSolutionDirectory)"
        ExportName="$(OpenWrap-ExportName)"
        AllowBinDuplicates="$(OpenWrap-AllowBinDuplicates)"

        ContentFiles="@(_OpenWrap-FilteredContent)"
        BuildOutputFiles="@(_OpenWrap-FilteredBuildOutput)"
        SourceFiles="@(_OpenWrap-SourceFiles)"
      />
    <Delete Files="@(_OpenWrap-GeneratedSharedAssembly)" Condition="'$(_OpenWrap-GenerateSharedAssemblyInfo)' == 'True'" TreatErrorsAsWarnings="true" />
  </Target>



  <Import Project="$(OpenWrap-BuildTasksDirectory)\OpenWrap.tasks" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />

  <PropertyGroup>
    <BuildDependsOn>
      OpenWrap-BeforeBuild;
      $(BuildDependsOn);
      OpenWrap-AfterBuild;
    </BuildDependsOn>
    <ResolveAssemblyReferencesDependsOn>
      OpenWrap-ResolveReferences;
      $(ResolveAssemblyReferencesDependsOn);
    </ResolveAssemblyReferencesDependsOn>
  </PropertyGroup>
</Project>