<?xml version="1.0" encoding="utf-8"?>
<!-- Defines targets for projects that consume wraps -->
<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="OpenWrap-Initialize">

  <!-- Default folder locations -->
  <PropertyGroup>
    <OpenWrap-EnableVisualStudioIntegration Condition="'$(OpenWrap-EnableVisualStudioIntegration)' == '' and '$(BuildingInsideVisualStudio)' == 'true'">true</OpenWrap-EnableVisualStudioIntegration>

    <!-- Emit output information post-build for OpenWrap to create packages -->
    <OpenWrap-EmitOutputInstructions Condition="'$(OpenWrap-EmitOutputInstructions)' == ''">false</OpenWrap-EmitOutputInstructions>

    <OpenWrap-EnableVisualStudioIntegration Condition="'$(OpenWrap-EnableVisualStudioIntegration)' == ''">false</OpenWrap-EnableVisualStudioIntegration>
    <!-- We detect the root path based on the existence of a /wraps folder -->
    <OpenWrap-ProjectRepositoryPath Condition="'$(OpenWrap-ProjectRepositoryPath)' == ''">$(MSBuildProjectDirectory)\..\wraps</OpenWrap-ProjectRepositoryPath>
    <OpenWrap-ProjectRepositoryPath Condition="!Exists('$(OpenWrap-ProjectRepositoryPath)')">$(MSBuildProjectDirectory)\..\..\wraps</OpenWrap-ProjectRepositoryPath>
    <OpenWrap-ProjectRepositoryPath Condition="!Exists('$(OpenWrap-ProjectRepositoryPath)')">$(MSBuildProjectDirectory)\..\..\..\wraps</OpenWrap-ProjectRepositoryPath>

    <OpenWrap-BuildTasksDirectory Condition="'$(OpenWrap-BuildTasksDirectory)' == ''">$(OpenWrap-ProjectRepositoryPath)\openwrap\build</OpenWrap-BuildTasksDirectory>

    <RootSolutionDirectory>$(OpenWrap-ProjectRepositoryPath)\..</RootSolutionDirectory>

    <!-- These properties are defined so we can default the build when ran outside of the msbuild runner (ie within VS). -->
    <OpenWrap-TargetProfile Condition="'$(OpenWrap-TargetProfile)' == '' and '$(TargetFrameworkVersion)' == 'v2.0'">net20</OpenWrap-TargetProfile>
    <OpenWrap-TargetProfile Condition="'$(OpenWrap-TargetProfile)' == '' and '$(TargetFrameworkVersion)' == 'v3.0'">net30</OpenWrap-TargetProfile>
    <OpenWrap-TargetProfile Condition="'$(OpenWrap-TargetProfile)' == '' and '$(TargetFrameworkVersion)' == 'v3.5'">net35</OpenWrap-TargetProfile>
    <OpenWrap-TargetProfile Condition="'$(OpenWrap-TargetProfile)' == '' and '$(TargetFrameworkVersion)' == 'v4.0'">net40</OpenWrap-TargetProfile>
    
    <OpenWrap-TargetPlatform Condition="'$(OpenWrap-TargetPlatform)' == ''">$(Platform)</OpenWrap-TargetPlatform>
    <OpenWrap-TargetPlatform Condition="'$(OpenWrap-TargetPlatform)' == ''">AnyCPU</OpenWrap-TargetPlatform>
    <OpenWrap-ExportName Condition="'$(OpenWrap-ExportName)' == ''">bin-$(OpenWrap-TargetProfile)</OpenWrap-ExportName>
    <DefineConstants>$(DefineConstants);__OW_PLATFORM_$(OpenWrap-TargetPlatform)__;__OW_PROFILE_$(OpenWrap-TargetProfile)__;</DefineConstants>
    <OpenWrap-AllowBinDuplicates Condition="'$(OpenWrap-AllowBinDuplicates)' == ''">false</OpenWrap-AllowBinDuplicates>
    <OpenWrap-CopyLocal Condition="'$(OpenWrap-CopyLocal)' == ''">true</OpenWrap-CopyLocal>

    <OpenWrap-IncludePdbFiles Condition="'$(OpenWrap-IncludePdbFiles)' == ''">true</OpenWrap-IncludePdbFiles>
  	<OpenWrap-IncludeCodeDocFiles Condition="'$(OpenWrap-IncludeCodeDocFiles)' == ''">true</OpenWrap-IncludeCodeDocFiles>
  	<OpenWrap-IncludeSourceFiles Condition="'$(OpenWrap-IncludeSourceFiles)' == ''">false</OpenWrap-IncludeSourceFiles>
  </PropertyGroup>

  <Target Name="OpenWrap-Initialize">
    <InitializeOpenWrap StartDebug="$(OpenWrap-StartDebug)" CurrentProjectFile="$(MSBuildProjectFullPath)" >
      <Output TaskParameter="Name" PropertyName="OpenWrap-PackageName" />
      <Output TaskParameter="Scope" PropertyName="OpenWrap-Scope" Condition="'$(OpenWrap-Scope)' == ''" />
      <Output TaskParameter="DescriptorPath" PropertyName="OpenWrap-DescriptorPath" Condition="'$(OpenWrap-DescriptorPath)' == ''" />
    </InitializeOpenWrap>

    <InitializeVisualStudioIntegration
      EnableVisualStudioIntegration="$(OpenWrap-EnableVisualStudioIntegration)"
      />
    <!-- Sanity checks -->
    
    <Error Condition="'$(OutputType)' != 'winexe' and '$(OutputType)' != 'exe' and '$(OutputType)' != 'library'" Text="The project type '$(OutputType)' is not supported." />

  </Target>





  <PropertyGroup>

  </PropertyGroup>

  <Target Name="OpenWrap-ResolveReferences" DependsOnTargets="OpenWrap-Initialize">
    <ResolveWrapReferences
      WrapDescriptor="$(OpenWrap-DescriptorPath)"
      WrapsDirectory="$(OpenWrap-ProjectRepositoryPath)"
      Platform="$(OpenWrap-TargetPlatform)"
      Profile="$(OpenWrap-TargetProfile)"
      ExcludeAssemblies="$(AssemblyName);$(OpenWrap-ExcludeAssemblies)"
      InputReferences="@(Reference)"
      CopyLocal="$(OpenWrap-CopyLocal)">
      <Output TaskParameter="OutputReferences" ItemName="Reference" />

    </ResolveWrapReferences>
  </Target>

  <Target Name="OpenWrap-BeforeBuild" DependsOnTargets="OpenWrap-Initialize">

  </Target>

  <Target Name="OpenWrap-AfterBuild"
          Condition="$(OpenWrap-EmitOutputInstructions)">

    <!-- Referenced projects -->
    <ItemGroup>
      <_OpenWrap-AssemblyReferences Include="@(Reference->'%(HintPath)')" Condition="'%(Reference.FromOpenWrap)' == 'True'" />
      <_OpenWrap-PdbFiles
        Include="@(ReferenceCopyLocalPaths->'%(RootDir)%(Directory)%(Filename).pdb')"
        />
      <_OpenWrap-PdbFiles
        Include="@(IntermediateAssembly->'%(RootDir)%(Directory)%(Filename).pdb')"
        />
      <_OpenWrap-SerializationFiles Include="@(ReferenceCopyLocalPaths->'%(RootDir)%(Directory)%(Filename).resources.dll')" />
      <_OpenWrap-AllAssemblyReferenceFiles Include="@(ReferenceCopyLocalPaths->'%(FullPath)')" />
      <_OpenWrap-DeleteAnnoyingVsOptimizationFiles Include="$(IntermediateOutputPath)*.cache" />
      <_OpenWrap-SourceFiles Include="@(Compile->'%(RootDir)%(Directory)%(Filename).%(FileExtension)')"/>
    </ItemGroup>
    <PropertyGroup>

      <_OpenWrap-IsEntryPointProject Condition="'$(OpenWrap-CurrentProjectFile)' == '' or '$(OpenWrap-CurrentProjectFile)' == '$(MSBuildProjectDirectory)\$(MSBuildProjectFile)'">true</_OpenWrap-IsEntryPointProject>

    </PropertyGroup>
    <PublishPackageContent
      Condition="'$(_OpenWrap-IsEntryPointProject)' == 'true'"
      IncludePdbFiles="$(OpenWrap-IncludePdbFiles)"
      IncludeCodeDocFiles="$(OpenWrap-IncludeCodeDocFiles)"
      IncludeSourceFiles="$(OpenWRap-IncludeSourceFiles)"
      
      BasePath="$(MSBuildProjectDirectory)"
      ExportName="$(OpenWrap-ExportName)"
      AllowBinDuplicates="$(OpenWrap-AllowBinDuplicates)"

      OutputAssemblyFiles="@(IntermediateAssembly->'%(FullPath)')"
      ContentFiles="@(Content->'%(FullPath)')"
      AllAssemblyReferenceFiles="@(_OpenWrap-AllAssemblyReferenceFiles)"
      OpenWrapReferenceFiles="@(_OpenWrap-AssemblyReferences)"
      PdbFiles="@(_OpenWrap-PdbFiles)"
      CodeDocFiles="@(DocFileItem->'%(FullPath)')"
      SatelliteAssemblies="@(IntermediateSatelliteAssembliesWithTargetPath->'$(OutDir)%(Culture)\$(TargetName).resources.dll')"
      SerializationAssemblies="@(_OpenWrap-SerializationFiles)"
      SourceFiles="@(_OpenWrap-SourceFiles)"
      />

    <!-- delete assembly reference cache to prevent VS from not calling the initialize task on next opening -->
    <Delete Files="$(ResolveAssemblyReferencesStateFile);@(_OpenWrap-DeleteAnnoyingVsOptimizationFiles)" ContinueOnError="true" />

  </Target>



  <Import Project="$(OpenWrap-BuildTasksDirectory)\OpenWrap.tasks" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />

  <PropertyGroup>
    <BuildDependsOn>
      OpenWrap-BeforeBuild;
      $(BuildDependsOn);
      OpenWrap-AfterBuild;
    </BuildDependsOn>
    <ResolveAssemblyReferencesDependsOn>
      OpenWrap-ResolveReferences;
      $(ResolveAssemblyReferencesDependsOn);
    </ResolveAssemblyReferencesDependsOn>
  </PropertyGroup>
</Project>